@Library('github.com/sorah/jenkinsfile-slack@master') _
pipeline {
    agent {
        docker {
            image 'pipeline_agent'
            args '-v /var/run/docker.sock:/var/run/docker.sock -v /dev/shm:/dev/shm'
        }
    }
    stages {
        stage('Test') {
            steps {
                dir('rest_api') {
                    sh "mvn -U test"
                }
            }
        }
        stage('SonarQube analysis') {
            steps {
                withSonarQubeEnv('sonar') {
                    dir('rest_api') {
                        sh 'mvn sonar:sonar'
                    }
                }
            }
        }
        stage('Deployment') {
            when {
                branch 'master'
            }
            steps {
                dir('rest_api') {
                    sh '''
                        mvn package -Dmaven.test.skip=true -DskipTests

                        docker build -t production_server .

                        docker stop production || true && docker rm production || true

                        docker run -p 8080:8080 -d --name production production_server
                    '''
                }
            }
        }
    }
    post {
        always {
            postNotifySlack currentBuild.result
        }
    }
}
